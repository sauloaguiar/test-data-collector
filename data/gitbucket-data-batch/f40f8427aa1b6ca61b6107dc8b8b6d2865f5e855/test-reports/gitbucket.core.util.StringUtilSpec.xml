<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="ds" name="gitbucket.core.util.StringUtilSpec" tests="11" errors="0" failures="2" time="0.017">
                     <properties>
      <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/><property name="java.vm.version" value="25.72-b15"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/home/saguiar/repos/gitbucket"/><property name="java.runtime.version" value="1.8.0_72-b15"/><property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/><property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/><property name="os.arch" value="amd64"/><property name="java.io.tmpdir" value="/tmp"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Linux"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="52.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="3.16.0-30-generic"/><property name="user.home" value="/home/saguiar"/><property name="user.timezone" value="America/Chicago"/><property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.8"/><property name="java.class.path" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar"/><property name="user.name" value="saguiar"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.8"/><property name="sun.java.command" value="/usr/share/sbt-launcher-packaging/bin/sbt-launch.jar clean coverage test"/><property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.awt.X11.XToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.8.0_72"/><property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/><property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.cpu.endian" value="little"/><property name="sun.cpu.isalist" value=""/>
    </properties>
                     <testcase classname="gitbucket.core.util.StringUtilSpec" name="urlEncode should encode whitespace to %20" time="0.0">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="urlDecode should decode encoded string to original string" time="0.001">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="urlDecode should decode en%20 to whitespace" time="0.008">
                                                 <failure message="&quot;aa b[b]&quot; did not equal &quot;aa b[1]&quot;" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: &quot;aa b[b]&quot; did not equal &quot;aa b[1]&quot;
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:500)
	at org.scalatest.FunSpec.newAssertionFailedException(FunSpec.scala:1626)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:466)
	at gitbucket.core.util.StringUtilSpec$$anonfun$2$$anonfun$apply$mcV$sp$3.apply$mcV$sp(StringUtilSpec.scala:21)
	at gitbucket.core.util.StringUtilSpec$$anonfun$2$$anonfun$apply$mcV$sp$3.apply(StringUtilSpec.scala:21)
	at gitbucket.core.util.StringUtilSpec$$anonfun$2$$anonfun$apply$mcV$sp$3.apply(StringUtilSpec.scala:21)
	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSpecLike$$anon$1.apply(FunSpecLike.scala:422)
	at org.scalatest.Suite$class.withFixture(Suite.scala:1122)
	at org.scalatest.FunSpec.withFixture(FunSpec.scala:1626)
	at org.scalatest.FunSpecLike$class.invokeWithFixture$1(FunSpecLike.scala:419)
	at org.scalatest.FunSpecLike$$anonfun$runTest$1.apply(FunSpecLike.scala:431)
	at org.scalatest.FunSpecLike$$anonfun$runTest$1.apply(FunSpecLike.scala:431)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.FunSpecLike$class.runTest(FunSpecLike.scala:431)
	at org.scalatest.FunSpec.runTest(FunSpec.scala:1626)
	at org.scalatest.FunSpecLike$$anonfun$runTests$1.apply(FunSpecLike.scala:464)
	at org.scalatest.FunSpecLike$$anonfun$runTests$1.apply(FunSpecLike.scala:464)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:427)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)
	at org.scalatest.FunSpecLike$class.runTests(FunSpecLike.scala:464)
	at org.scalatest.FunSpec.runTests(FunSpec.scala:1626)
	at org.scalatest.Suite$class.run(Suite.scala:1424)
	at org.scalatest.FunSpec.org$scalatest$FunSpecLike$$super$run(FunSpec.scala:1626)
	at org.scalatest.FunSpecLike$$anonfun$run$1.apply(FunSpecLike.scala:468)
	at org.scalatest.FunSpecLike$$anonfun$run$1.apply(FunSpecLike.scala:468)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)
	at org.scalatest.FunSpecLike$class.run(FunSpecLike.scala:468)
	at org.scalatest.FunSpec.run(FunSpec.scala:1626)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:466)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:677)
	at sbt.ForkMain$Run$2.call(ForkMain.java:294)
	at sbt.ForkMain$Run$2.call(ForkMain.java:284)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
</failure>
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="splitWords should split string by whitespaces" time="0.004">
                                                 <failure message="Array(&quot;aa&quot;, &quot;bb&quot;, &quot;cc&quot;, &quot;dd&quot;, &quot;ee&quot;) did not equal Array(&quot;aa&quot;, &quot;bb&quot;, &quot;cc&quot;, &quot;dd&quot;, &quot;ee&quot;)" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: Array(&quot;aa&quot;, &quot;bb&quot;, &quot;cc&quot;, &quot;dd&quot;, &quot;ee&quot;) did not equal Array(&quot;aa&quot;, &quot;bb&quot;, &quot;cc&quot;, &quot;dd&quot;, &quot;ee&quot;)
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:500)
	at org.scalatest.FunSpec.newAssertionFailedException(FunSpec.scala:1626)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:466)
	at gitbucket.core.util.StringUtilSpec$$anonfun$3$$anonfun$apply$mcV$sp$4.apply$mcV$sp(StringUtilSpec.scala:28)
	at gitbucket.core.util.StringUtilSpec$$anonfun$3$$anonfun$apply$mcV$sp$4.apply(StringUtilSpec.scala:26)
	at gitbucket.core.util.StringUtilSpec$$anonfun$3$$anonfun$apply$mcV$sp$4.apply(StringUtilSpec.scala:26)
	at org.scalatest.Transformer$$anonfun$apply$1.apply$mcV$sp(Transformer.scala:22)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSpecLike$$anon$1.apply(FunSpecLike.scala:422)
	at org.scalatest.Suite$class.withFixture(Suite.scala:1122)
	at org.scalatest.FunSpec.withFixture(FunSpec.scala:1626)
	at org.scalatest.FunSpecLike$class.invokeWithFixture$1(FunSpecLike.scala:419)
	at org.scalatest.FunSpecLike$$anonfun$runTest$1.apply(FunSpecLike.scala:431)
	at org.scalatest.FunSpecLike$$anonfun$runTest$1.apply(FunSpecLike.scala:431)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.FunSpecLike$class.runTest(FunSpecLike.scala:431)
	at org.scalatest.FunSpec.runTest(FunSpec.scala:1626)
	at org.scalatest.FunSpecLike$$anonfun$runTests$1.apply(FunSpecLike.scala:464)
	at org.scalatest.FunSpecLike$$anonfun$runTests$1.apply(FunSpecLike.scala:464)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:427)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)
	at org.scalatest.FunSpecLike$class.runTests(FunSpecLike.scala:464)
	at org.scalatest.FunSpec.runTests(FunSpec.scala:1626)
	at org.scalatest.Suite$class.run(Suite.scala:1424)
	at org.scalatest.FunSpec.org$scalatest$FunSpecLike$$super$run(FunSpec.scala:1626)
	at org.scalatest.FunSpecLike$$anonfun$run$1.apply(FunSpecLike.scala:468)
	at org.scalatest.FunSpecLike$$anonfun$run$1.apply(FunSpecLike.scala:468)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)
	at org.scalatest.FunSpecLike$class.run(FunSpecLike.scala:468)
	at org.scalatest.FunSpec.run(FunSpec.scala:1626)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:466)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:677)
	at sbt.ForkMain$Run$2.call(ForkMain.java:294)
	at sbt.ForkMain$Run$2.call(ForkMain.java:284)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
</failure>
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="escapeHtml should escape &amp;, &lt;, &gt; and &quot;" time="0.0">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="md5 should generate MD5 hash" time="0.0">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="sha1 should generate SHA1 hash" time="0.001">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="extractIssueId should extract '#xxx' and return extracted id" time="0.002">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="extractIssueId should return Nil from message which does not contain #xxx" time="0.0">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="extractCloseId should extract 'close #xxx' and return extracted id" time="0.001">
                                                 
                                               </testcase><testcase classname="gitbucket.core.util.StringUtilSpec" name="extractCloseId should returns Nil from message which does not contain close command" time="0.0">
                                                 
                                               </testcase>
                     <system-out></system-out>
                     <system-err></system-err>
                   </testsuite>